apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: cxf-cdi-java-example

parameters:
- description: The template service name, required
  name: SERVICE_NAME
  value: cxf-cdi-java-example
  required: true
- description: A-MQ username, required
  name: AMQ_USER
  required: true
- description: A-MQ password, required
  name: AMQ_PASSWORD
  required: true
- description: A-MQ password, required
  name: SOURCE_REPOSITORY
  value: https://github.com/luigidemasi/camel-cxf-cdi-java-example
  required: true
- description: Maven release version
  name: RELEASE_VERSION
  value: 1.0-SNAPSHOT
  
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9779"
      prometheus.io/scrape: "true"
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}
      container: java
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's OpenWire port.
    creationTimestamp: null
    labels:
      application: broker
      template: amq62-basic
      xpaas: 1.2.0
    name: broker-amq-tcp
  spec:
    ports:
    - port: 61616
      protocol: TCP
      targetPort: 61616
    selector:
      deploymentConfig: broker-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      component: ${SERVICE_NAME}
      container: java
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}-route
  spec:
    to:
      kind: Service
      name: ${SERVICE_NAME}
  status: {}


################  BUILD CONFIG FOR PRODUCER
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      component: ${SERVICE_NAME}-producer
      container: java
      delete: amq
      group: inmarsat-examples
      project: ${SERVICE_NAME}-producer
      provider: s2i
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}-producer
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${SERVICE_NAME}-producer:latest
    resources: {}
    source:
      git:
        ref: master
        uri: ${SOURCE_REPOSITORY}
        contextDir: producer
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: BUILD_LOGLEVEL
          value: "5"
        - name: ARTIFACT_DIR
        - name: MAVEN_ARGS
          value: package -DskipTests -e
        - name: MAVEN_ARGS_APPEND
        - name: RELEASE_VERSION
          value: ${RELEASE_VERSION}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:1.0
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0



################  BUILD CONFIG FOR CONSUMER

- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      component: ${SERVICE_NAME}-consumer
      container: java
      delete: amq
      group: inmarsat-examples
      project: ${SERVICE_NAME}-consumer
      provider: s2i
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}-consumer
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${SERVICE_NAME}-consumer:latest
    resources: {}
    source:
      git:
        ref: master
        uri: ${SOURCE_REPOSITORY}
        contextDir: consumer
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: BUILD_LOGLEVEL
          value: "5"
        - name: ARTIFACT_DIR
        - name: MAVEN_ARGS
          value: package -DskipTests -e
        - name: MAVEN_ARGS_APPEND
        - name: RELEASE_VERSION
          value: ${RELEASE_VERSION}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:1.0
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2016-03-07T16:25:19Z
    creationTimestamp: null
    labels:
      component: ${SERVICE_NAME}-producer
      container: java
      delete: amq
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}-producer

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2016-03-07T16:25:19Z
    creationTimestamp: null
    labels:
      component: ${SERVICE_NAME}-consumer
      container: java
      delete: amq
      version: 2.2.0.redhat-079
    name: ${SERVICE_NAME}-consumer

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      application: broker
      template: amq62-basic
      xpaas: 1.2.0
    name: broker-amq
  spec:
    replicas: 1
    selector:
      deploymentConfig: broker-amq
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          application: broker
          deploymentConfig: broker-amq
        name: broker-amq
      spec:
        containers:
        - env:
          - name: AMQ_USER
            value: ${AMQ_USER}
          - name: AMQ_PASSWORD
            value: ${AMQ_PASSWORD}
          - name: AMQ_TRANSPORTS
            value: openwire
          - name: AMQ_QUEUES
          - name: AMQ_TOPICS
          - name: AMQ_MESH_DISCOVERY_TYPE
            value: kube
          - name: AMQ_MESH_SERVICE_NAME
            value: broker-amq-tcp
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AMQ_STORAGE_USAGE_LIMIT
            value: 1 gb
          image: registry.access.redhat.com/jboss-amq-6/amq62-openshift:1.2
          imagePullPolicy: Always
          name: broker-amq
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/amq/bin/readinessProbe.sh
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - broker-amq
        from:
          kind: ImageStreamTag
          name: jboss-amq-62:1.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status: {}
  
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}-producer
    name: ${SERVICE_NAME}-producer
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${SERVICE_NAME}-producer
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${SERVICE_NAME}-producer
          deploymentconfig: ${SERVICE_NAME}-producer
      spec:
        containers:
        - env:
          - name: BROKER_AMQ_TCP_USERNAME
            value: ${AMQ_USER}
          - name: BROKER_AMQ_TCP_PASSWORD
            value: ${AMQ_PASSWORD}
          image: ${SERVICE_NAME}
          imagePullPolicy: Always
          name: ${SERVICE_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${SERVICE_NAME}-producer
        from:
          kind: ImageStreamTag
          name: ${SERVICE_NAME}-producer:latest
      type: ImageChange
    - type: ConfigChange
  status: {}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}-consumer
    name: ${SERVICE_NAME}-consumer
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${SERVICE_NAME}-consumer
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${SERVICE_NAME}-consumer
          deploymentconfig: ${SERVICE_NAME}-consumer
      spec:
        containers:
        - env:
          - name: BROKER_AMQ_TCP_USERNAME
            value: ${AMQ_USER}
          - name: BROKER_AMQ_TCP_PASSWORD
            value: ${AMQ_PASSWORD}
          image: ${SERVICE_NAME}
          imagePullPolicy: Always
          name: ${SERVICE_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${SERVICE_NAME}-consumer
        from:
          kind: ImageStreamTag
          name: ${SERVICE_NAME}-consumer:latest
      type: ImageChange
    - type: ConfigChange
  status: {}
